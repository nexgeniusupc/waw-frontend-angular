name: Node

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  build:
    name: 'Build (node: ${{ matrix.node }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
  test:
    name: 'Test (node: ${{ matrix.node }})'
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node: [16, 18]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
  e2e:
    name: 'E2E (node: ${{ matrix.node }})'
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node: [16, 18]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Download latest backend artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: ${{ vars.BACKEND_REPOSITORY }}
          branch: ${{ vars.BACKEND_BRANCH }}
          workflow: ${{ vars.BACKEND_WORKFLOW }}
          workflow_conclusion: success
          name: ${{ vars.BACKEND_ARTIFACT_NAME }}
          path: .cache/backend/
      - name: Get JAR filename
        id: jar
        run: |
          JAR_FILENAME=$(find .cache/backend/ -name *.jar)
          echo "JAR_FILENAME=$JAR_FILENAME" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run E2E tests with backend
        uses: BerniWittmann/background-server-action@v1
        with:
          start: java -jar -Dspring.profiles.active=prod,h2 ${{ steps.jar.outputs.JAR_FILENAME }}
          command: npm run cypress:run:ci
          command-windows: npm run cypress:run:ci
          wait-on: 'http://localhost:8080/_/actuator/health'
          wait-on-timeout: 120
